"models":
- "classname": |-
    Country
  "code": |
    class Country(Base):
        __tablename__ = 'country'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        code = Column(String)
        flag_image = Column(String)
  "description": |-
    Stores details about countries participating in the Eurovision contest.
  "name": |-
    Country
- "classname": |-
    Contestant
  "code": |
    class Contestant(Base):
        __tablename__ = 'contestant'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        country_id = Column(Integer, ForeignKey('country.id'))
        bio = Column(String)
  "description": |-
    Stores details of contestants participating in the Eurovision contest.
  "name": |-
    Contestant
- "classname": |-
    Song
  "code": |
    class Song(Base):
        __tablename__ = 'song'

        id = Column(Integer, primary_key=True, autoincrement=True)
        title = Column(String)
        duration = Column(Integer) # Duration in seconds
        contestant_id = Column(Integer, ForeignKey('contestant.id'))
        language = Column(String)
  "description": |-
    Stores information about songs that contestants perform.
  "name": |-
    Song
- "classname": |-
    Judge
  "code": |
    class Judge(Base):
        __tablename__ = 'judge'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        country_id = Column(Integer, ForeignKey('country.id'))
        experience_years = Column(Integer)
  "description": |-
    Stores details about judges in the Eurovision contest.
  "name": |-
    Judge
- "classname": |-
    Vote
  "code": |
    class Vote(Base):
        __tablename__ = 'vote'

        id = Column(Integer, primary_key=True, autoincrement=True)
        judge_id = Column(Integer, ForeignKey('judge.id'))
        song_id = Column(Integer, ForeignKey('song.id'))
        points = Column(Integer)
        vote_time = Column(DateTime)
  "description": |-
    Records votes given by judges to songs performed by contestants.
  "name": |-
    Vote
- "classname": |-
    Host
  "code": |
    class Host(Base):
        __tablename__ = 'host'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        country_id = Column(Integer, ForeignKey('country.id'))
        years_hosted = Column(Integer)
  "description": |-
    Stores information about the hosts of the Eurovision contest.
  "name": |-
    Host
- "classname": |-
    Event
  "code": |
    class Event(Base):
        __tablename__ = 'event'

        id = Column(Integer, primary_key=True, autoincrement=True)
        year = Column(Integer)
        city = Column(String)
        start_date = Column(Date)
        end_date = Column(Date)
  "description": |-
    Records details of Eurovision events held annually.
  "name": |-
    Event
- "classname": |-
    EventParticipation
  "code": |
    class EventParticipation(Base):
        __tablename__ = 'event_participation'

        id = Column(Integer, primary_key=True, autoincrement=True)
        event_id = Column(Integer, ForeignKey('event.id'))
        contestant_id = Column(Integer, ForeignKey('contestant.id'))
  "description": |-
    Links contestants to the events they participate in.
  "name": |-
    EventParticipation
- "classname": |-
    Jury
  "code": |
    class Jury(Base):
        __tablename__ = 'jury'

        id = Column(Integer, primary_key=True, autoincrement=True)
        event_id = Column(Integer, ForeignKey('event.id'))
        judge_id = Column(Integer, ForeignKey('judge.id'))
  "description": |-
    Associates judges with the events they are judging.
  "name": |-
    Jury
- "classname": |-
    Performance
  "code": |
    class Performance(Base):
        __tablename__ = 'performance'

        id = Column(Integer, primary_key=True, autoincrement=True)
        event_id = Column(Integer, ForeignKey('event.id'))
        song_id = Column(Integer, ForeignKey('song.id'))
        performance_time = Column(DateTime)
  "description": |-
    Stores details about performances in the Eurovision events.
  "name": |-
    Performance
- "classname": |-
    VoteSummary
  "code": |
    class VoteSummary(Base):
        __tablename__ = 'vote_summary'

        id = Column(Integer, primary_key=True, autoincrement=True)
        song_id = Column(Integer, ForeignKey('song.id'))
        total_points = Column(Integer)
  "description": |-
    Stores the total points received by each song, calculated manually.
  "name": |-
    VoteSummary
- "classname": |-
    AudienceVote
  "code": |
    class AudienceVote(Base):
        __tablename__ = 'audience_vote'

        id = Column(Integer, primary_key=True, autoincrement=True)
        event_id = Column(Integer, ForeignKey('event.id'))
        song_id = Column(Integer, ForeignKey('song.id'))
        points = Column(Integer)
  "description": |-
    Records audience votes for songs performed in events.
  "name": |-
    AudienceVote
"name": |-
  EurovisionDatabase
"rules":
- "code": |-
    when vote points update
    then total points = sum of points in Vote where song_id equals Vote.song_id
  "description": |-
    Calculate total points for each song based on votes received.
  "entity": |-
    Vote
  "name": |-
    Total Points Calculation
  "use_case": |-
    General
- "code": |-
    when contestant added
    check exists EventParticipation where contestant_id equals Contestant.id
  "description": |-
    Ensure each contestant is connected to an event via EventParticipation before entering any votes.
  "entity": |-
    Contestant
  "name": |-
    Validate Contestant Participation
  "use_case": |-
    General
"test_data": |-
  Country Test Data
  Contestant Test Data
  Song Test Data
  Judge Test Data
  Vote Test Data
  Host Test Data
  Event Test Data
  EventParticipation Test Data
  Jury Test Data
  Performance Test Data
  VoteSummary Test Data
  AudienceVote Test Data
"test_data_rows":
- "code": |-
    country_row_1 = Country(name="United Kingdom", code="UK", flag_image="uk_flag.png")
  "test_data_row_variable": |-
    country_row_1
- "code": |-
    country_row_2 = Country(name="Germany", code="DE", flag_image="de_flag.png")
  "test_data_row_variable": |-
    country_row_2
- "code": |-
    country_row_3 = Country(name="Sweden", code="SE", flag_image="se_flag.png")
  "test_data_row_variable": |-
    country_row_3
- "code": |-
    country_row_4 = Country(name="Italy", code="IT", flag_image="it_flag.png")
  "test_data_row_variable": |-
    country_row_4
- "code": |-
    contestant_row_1 = Contestant(name="Contestant A", country_id=1, bio="Talented singer from UK.")
  "test_data_row_variable": |-
    contestant_row_1
- "code": |-
    contestant_row_2 = Contestant(name="Contestant B", country_id=2, bio="Top performer from Germany.")
  "test_data_row_variable": |-
    contestant_row_2
- "code": |-
    contestant_row_3 = Contestant(name="Contestant C", country_id=3, bio="Rising star from Sweden.")
  "test_data_row_variable": |-
    contestant_row_3
- "code": |-
    contestant_row_4 = Contestant(name="Contestant D", country_id=4, bio="Legendary singer from Italy.")
  "test_data_row_variable": |-
    contestant_row_4
- "code": |-
    song_row_1 = Song(title="Song A", duration=180, contestant_id=1, language="English")
  "test_data_row_variable": |-
    song_row_1
- "code": |-
    song_row_2 = Song(title="Song B", duration=190, contestant_id=2, language="German")
  "test_data_row_variable": |-
    song_row_2
- "code": |-
    song_row_3 = Song(title="Song C", duration=200, contestant_id=3, language="Swedish")
  "test_data_row_variable": |-
    song_row_3
- "code": |-
    song_row_4 = Song(title="Song D", duration=210, contestant_id=4, language="Italian")
  "test_data_row_variable": |-
    song_row_4
- "code": |-
    judge_row_1 = Judge(name="Judge A", country_id=1, experience_years=5)
  "test_data_row_variable": |-
    judge_row_1
- "code": |-
    judge_row_2 = Judge(name="Judge B", country_id=2, experience_years=7)
  "test_data_row_variable": |-
    judge_row_2
- "code": |-
    judge_row_3 = Judge(name="Judge C", country_id=3, experience_years=10)
  "test_data_row_variable": |-
    judge_row_3
- "code": |-
    judge_row_4 = Judge(name="Judge D", country_id=4, experience_years=3)
  "test_data_row_variable": |-
    judge_row_4
- "code": |-
    vote_row_1 = Vote(judge_id=1, song_id=1, points=12, vote_time=datetime.now())
  "test_data_row_variable": |-
    vote_row_1
- "code": |-
    vote_row_2 = Vote(judge_id=2, song_id=2, points=10, vote_time=datetime.now())
  "test_data_row_variable": |-
    vote_row_2
- "code": |-
    vote_row_3 = Vote(judge_id=3, song_id=3, points=8, vote_time=datetime.now())
  "test_data_row_variable": |-
    vote_row_3
- "code": |-
    vote_row_4 = Vote(judge_id=4, song_id=4, points=6, vote_time=datetime.now())
  "test_data_row_variable": |-
    vote_row_4
- "code": |-
    host_row_1 = Host(name="Host A", country_id=1, years_hosted=2)
  "test_data_row_variable": |-
    host_row_1
- "code": |-
    host_row_2 = Host(name="Host B", country_id=2, years_hosted=1)
  "test_data_row_variable": |-
    host_row_2
- "code": |-
    host_row_3 = Host(name="Host C", country_id=3, years_hosted=3)
  "test_data_row_variable": |-
    host_row_3
- "code": |-
    host_row_4 = Host(name="Host D", country_id=4, years_hosted=1)
  "test_data_row_variable": |-
    host_row_4
- "code": |-
    event_row_1 = Event(year=2023, city="London", start_date=date(2023, 5, 1), end_date=date(2023, 5, 14))
  "test_data_row_variable": |-
    event_row_1
- "code": |-
    event_row_2 = Event(year=2022, city="Berlin", start_date=date(2022, 6, 4), end_date=date(2022, 6, 18))
  "test_data_row_variable": |-
    event_row_2
- "code": |-
    event_row_3 = Event(year=2021, city="Stockholm", start_date=date(2021, 5, 2), end_date=date(2021, 5, 16))
  "test_data_row_variable": |-
    event_row_3
- "code": |-
    event_row_4 = Event(year=2020, city="Rome", start_date=date(2020, 4, 25), end_date=date(2020, 5, 9))
  "test_data_row_variable": |-
    event_row_4
- "code": |-
    event_participation_row_1 = EventParticipation(event_id=1, contestant_id=1)
  "test_data_row_variable": |-
    event_participation_row_1
- "code": |-
    event_participation_row_2 = EventParticipation(event_id=2, contestant_id=2)
  "test_data_row_variable": |-
    event_participation_row_2
- "code": |-
    event_participation_row_3 = EventParticipation(event_id=3, contestant_id=3)
  "test_data_row_variable": |-
    event_participation_row_3
- "code": |-
    event_participation_row_4 = EventParticipation(event_id=4, contestant_id=4)
  "test_data_row_variable": |-
    event_participation_row_4
- "code": |-
    jury_row_1 = Jury(event_id=1, judge_id=1)
  "test_data_row_variable": |-
    jury_row_1
- "code": |-
    jury_row_2 = Jury(event_id=2, judge_id=2)
  "test_data_row_variable": |-
    jury_row_2
- "code": |-
    jury_row_3 = Jury(event_id=3, judge_id=3)
  "test_data_row_variable": |-
    jury_row_3
- "code": |-
    jury_row_4 = Jury(event_id=4, judge_id=4)
  "test_data_row_variable": |-
    jury_row_4
- "code": |-
    performance_row_1 = Performance(event_id=1, song_id=1, performance_time=datetime.now())
  "test_data_row_variable": |-
    performance_row_1
- "code": |-
    performance_row_2 = Performance(event_id=2, song_id=2, performance_time=datetime.now())
  "test_data_row_variable": |-
    performance_row_2
- "code": |-
    performance_row_3 = Performance(event_id=3, song_id=3, performance_time=datetime.now())
  "test_data_row_variable": |-
    performance_row_3
- "code": |-
    performance_row_4 = Performance(event_id=4, song_id=4, performance_time=datetime.now())
  "test_data_row_variable": |-
    performance_row_4
- "code": |-
    vote_summary_row_1 = VoteSummary(song_id=1, total_points=12)
  "test_data_row_variable": |-
    vote_summary_row_1
- "code": |-
    vote_summary_row_2 = VoteSummary(song_id=2, total_points=10)
  "test_data_row_variable": |-
    vote_summary_row_2
- "code": |-
    vote_summary_row_3 = VoteSummary(song_id=3, total_points=8)
  "test_data_row_variable": |-
    vote_summary_row_3
- "code": |-
    vote_summary_row_4 = VoteSummary(song_id=4, total_points=6)
  "test_data_row_variable": |-
    vote_summary_row_4
- "code": |-
    audience_vote_row_1 = AudienceVote(event_id=1, song_id=1, points=100)
  "test_data_row_variable": |-
    audience_vote_row_1
- "code": |-
    audience_vote_row_2 = AudienceVote(event_id=2, song_id=2, points=200)
  "test_data_row_variable": |-
    audience_vote_row_2
- "code": |-
    audience_vote_row_3 = AudienceVote(event_id=3, song_id=3, points=150)
  "test_data_row_variable": |-
    audience_vote_row_3
- "code": |-
    audience_vote_row_4 = AudienceVote(event_id=4, song_id=4, points=180)
  "test_data_row_variable": |-
    audience_vote_row_4
"test_data_sqlite": |-
  INSERT INTO country (name, code, flag_image) VALUES ('United Kingdom', 'UK', 'uk_flag.png');
  INSERT INTO country (name, code, flag_image) VALUES ('Germany', 'DE', 'de_flag.png');
  INSERT INTO country (name, code, flag_image) VALUES ('Sweden', 'SE', 'se_flag.png');
  INSERT INTO country (name, code, flag_image) VALUES ('Italy', 'IT', 'it_flag.png');

  INSERT INTO contestant (name, country_id, bio) VALUES ('Contestant A', 1, 'Talented singer from UK.');
  INSERT INTO contestant (name, country_id, bio) VALUES ('Contestant B', 2, 'Top performer from Germany.');
  INSERT INTO contestant (name, country_id, bio) VALUES ('Contestant C', 3, 'Rising star from Sweden.');
  INSERT INTO contestant (name, country_id, bio) VALUES ('Contestant D', 4, 'Legendary singer from Italy.');

  INSERT INTO song (title, duration, contestant_id, language) VALUES ('Song A', 180, 1, 'English');
  INSERT INTO song (title, duration, contestant_id, language) VALUES ('Song B', 190, 2, 'German');
  INSERT INTO song (title, duration, contestant_id, language) VALUES ('Song C', 200, 3, 'Swedish');
  INSERT INTO song (title, duration, contestant_id, language) VALUES ('Song D', 210, 4, 'Italian');

  INSERT INTO judge (name, country_id, experience_years) VALUES ('Judge A', 1, 5);
  INSERT INTO judge (name, country_id, experience_years) VALUES ('Judge B', 2, 7);
  INSERT INTO judge (name, country_id, experience_years) VALUES ('Judge C', 3, 10);
  INSERT INTO judge (name, country_id, experience_years) VALUES ('Judge D', 4, 3);

  INSERT INTO vote (judge_id, song_id, points, vote_time) VALUES (1, 1, 12, CURRENT_TIMESTAMP);
  INSERT INTO vote (judge_id, song_id, points, vote_time) VALUES (2, 2, 10, CURRENT_TIMESTAMP);
  INSERT INTO vote (judge_id, song_id, points, vote_time) VALUES (3, 3, 8, CURRENT_TIMESTAMP);
  INSERT INTO vote (judge_id, song_id, points, vote_time) VALUES (4, 4, 6, CURRENT_TIMESTAMP);

  INSERT INTO host (name, country_id, years_hosted) VALUES ('Host A', 1, 2);
  INSERT INTO host (name, country_id, years_hosted) VALUES ('Host B', 2, 1);
  INSERT INTO host (name, country_id, years_hosted) VALUES ('Host C', 3, 3);
  INSERT INTO host (name, country_id, years_hosted) VALUES ('Host D', 4, 1);

  INSERT INTO event (year, city, start_date, end_date) VALUES (2023, 'London', '2023-05-01', '2023-05-14');
  INSERT INTO event (year, city, start_date, end_date) VALUES (2022, 'Berlin', '2022-06-04', '2022-06-18');
  INSERT INTO event (year, city, start_date, end_date) VALUES (2021, 'Stockholm', '2021-05-02', '2021-05-16');
  INSERT INTO event (year, city, start_date, end_date) VALUES (2020, 'Rome', '2020-04-25', '2020-05-09');

  INSERT INTO event_participation (event_id, contestant_id) VALUES (1, 1);
  INSERT INTO event_participation (event_id, contestant_id) VALUES (2, 2);
  INSERT INTO event_participation (event_id, contestant_id) VALUES (3, 3);
  INSERT INTO event_participation (event_id, contestant_id) VALUES (4, 4);

  INSERT INTO jury (event_id, judge_id) VALUES (1, 1);
  INSERT INTO jury (event_id, judge_id) VALUES (2, 2);
  INSERT INTO jury (event_id, judge_id) VALUES (3, 3);
  INSERT INTO jury (event_id, judge_id) VALUES (4, 4);

  INSERT INTO performance (event_id, song_id, performance_time) VALUES (1, 1, CURRENT_TIMESTAMP);
  INSERT INTO performance (event_id, song_id, performance_time) VALUES (2, 2, CURRENT_TIMESTAMP);
  INSERT INTO performance (event_id, song_id, performance_time) VALUES (3, 3, CURRENT_TIMESTAMP);
  INSERT INTO performance (event_id, song_id, performance_time) VALUES (4, 4, CURRENT_TIMESTAMP);

  INSERT INTO vote_summary (song_id, total_points) VALUES (1, 12);
  INSERT INTO vote_summary (song_id, total_points) VALUES (2, 10);
  INSERT INTO vote_summary (song_id, total_points) VALUES (3, 8);
  INSERT INTO vote_summary (song_id, total_points) VALUES (4, 6);

  INSERT INTO audience_vote (event_id, song_id, points) VALUES (1, 1, 100);
  INSERT INTO audience_vote (event_id, song_id, points) VALUES (2, 2, 200);
  INSERT INTO audience_vote (event_id, song_id, points) VALUES (3, 3, 150);
  INSERT INTO audience_vote (event_id, song_id, points) VALUES (4, 4, 180);
